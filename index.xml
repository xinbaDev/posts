<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alex's Blog</title><link>https://xinbadev.github.io/posts/</link><description>Recent content on Alex's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xinbadev.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How Chatgpt helps me create a game text extractor and teach me japanese</title><link>https://xinbadev.github.io/posts/chatgpt/</link><pubDate>Thu, 04 May 2023 23:15:32 +1100</pubDate><guid>https://xinbadev.github.io/posts/chatgpt/</guid><description>Recently, I have been playing a game called “The Legend of Heroes - Trails of Cold Steel,” a JRPG that I hope can help me learn some Japanese. I ended up creating a game text extractor to make it easier for me to translate the in-game text. When combined with ChatGPT, it becomes a very helpful Japanese language teaching app. I can’t help but record what I have learned during this process.</description></item><item><title>Debugging and Optimization of SQL (Postgres query planner)</title><link>https://xinbadev.github.io/posts/sql/</link><pubDate>Fri, 13 Jan 2023 19:33:00 +1100</pubDate><guid>https://xinbadev.github.io/posts/sql/</guid><description>Recently, I encountered a very interesting SQL problem at work. The same raw SQL query took significantly different execution times. Through debugging and research of this problem, I gained a deeper understanding of the SQL execution process (Postgres) and corresponding optimization techniques.</description></item><item><title>Investigating Open Source Servers</title><link>https://xinbadev.github.io/posts/server/</link><pubDate>Wed, 13 Jul 2022 19:45:00 +1100</pubDate><guid>https://xinbadev.github.io/posts/server/</guid><description>Recently, due to work requirements, I have been delve into distributed tracing. After reading a series of documents, I planned to deploy a set of distributed monitoring systems to solve the strange connection reset error that has been occurring with WebSockets. After some research, I found that the current nginx server being used does not have good support for this feature, so I decided to simply switch to a different server.</description></item><item><title>Some Thoughts on the Cloudflare Incident Happened a Few Days Ago</title><link>https://xinbadev.github.io/posts/cloudflare/</link><pubDate>Sat, 25 Jun 2022 10:49:00 +1100</pubDate><guid>https://xinbadev.github.io/posts/cloudflare/</guid><description>A few days ago, a significant incident disrupted Cloudflare&amp;rsquo;s network, affecting numerous vital websites and even causing a temporary outage on Discord. Subsequently, I came across tweets confirming that the issue indeed pertained to Cloudflare. The following day, Cloudflare promptly delivered a comprehensive incident report on their official blog, aligning with my anticipated standards of transparency and thorough analysis. In this context, I aim to document my reflections on this event.</description></item><item><title>Forta contest</title><link>https://xinbadev.github.io/posts/forta/</link><pubDate>Wed, 08 Jun 2022 19:39:11 +1100</pubDate><guid>https://xinbadev.github.io/posts/forta/</guid><description>Before discussing the Forta competition, let me introduce Forta first. So far, Forta has been developed for about a year, with a total of 1330 commits, and the main developers are two people. The development language is GO. This is not a particularly large project, and its functions are relatively clear. It is mainly used for monitoring. In addition, GO is inherently a highly engineering-oriented language, so reading it is not too difficult.</description></item><item><title>Issue with Deep Filtering in Strapi CMS</title><link>https://xinbadev.github.io/posts/strapi-cms/</link><pubDate>Sat, 28 May 2022 11:12:22 +1100</pubDate><guid>https://xinbadev.github.io/posts/strapi-cms/</guid><description>Recently, while researching optimizations for Strapi CMS, I came across a warning in the console - &amp;ldquo;Deep filtering queries should be used carefully (e.g Can cause performance issues). When possible build custom routes which will in most case be more optimised.&amp;rdquo; I was confused by this warning and decided to investigate it further.</description></item><item><title>Exploring optimization of GraphQL plugin in Strapi CMS</title><link>https://xinbadev.github.io/posts/grapqlloader/</link><pubDate>Fri, 13 May 2022 11:18:22 +1100</pubDate><guid>https://xinbadev.github.io/posts/grapqlloader/</guid><description>Recently, the CMS server has been showing red lights again. Although various optimizations have been made over the past year, such as adding caching and reducing database access, they only provide temporary relief. As the amount of data continues to increase, the problem reemerges. For example, after the cache expires, the server becomes overloaded for a period of time, resulting in slow response times or even crashes. To address this problem, the CMS was migrated to Kubernetes with multi-node deployment to improve availability. This certainly improves the user experience, but the problem has not been truly solved. The server still slows down every day and even restarts due to increased costs from autoscaling. I could reduce this problem by increasing the server configuration, but that would be going back to the old approach. It&amp;rsquo;s necessary to optimize the code level.</description></item><item><title>What is a good architecture?</title><link>https://xinbadev.github.io/posts/goodarch/</link><pubDate>Tue, 04 Aug 2020 19:58:11 +1100</pubDate><guid>https://xinbadev.github.io/posts/goodarch/</guid><description>I&amp;rsquo;ve been using AWS cloud services for several years now, and recently I&amp;rsquo;ve been preparing for the AWS Certified Solution Architect exam. During this time, I have reviewed the various features and systems of AWS cloud, and I have also read many AWS whitepapers. Lately, a question has been slowly emerging in my mind &amp;ndash; what is a good architecture, or what are the characteristics of a good architecture? I have been thinking about this question for a while and have read many excellent blog posts on the subject. My impression is that many architects focus on how to use various framework technologies to achieve high availability, reliability, and performance services. While this has been eye-opening, it has also given me the impression that all you need to do is master various framework technologies (including their applicability and trade-offs) to create a good architecture. However, after reading various AWS whitepapers, I have been prompted to rethink what makes a good architecture and have gained new insights.</description></item><item><title>All About Fallocate</title><link>https://xinbadev.github.io/posts/fallocate/</link><pubDate>Sat, 14 Mar 2020 17:14:11 +1100</pubDate><guid>https://xinbadev.github.io/posts/fallocate/</guid><description>Fallocate is a system call in Linux that is mainly used for block allocation on the hard disk. I first came across this command while testing a bug in a program locally. The bug only triggered when the hard disk was full, but there was still plenty of space left on it. I needed a way to quickly fill up the remaining space. I knew there was a command in Linux called &amp;lsquo;dd&amp;rsquo; that could write a file of a specified size to the hard disk. I had used this command before when creating a swap. However, this command was too slow when it came to creating large files. Then I remembered another command I had seen on StackOverflow called &amp;lsquo;fallocate&amp;rsquo;. According to its introduction, this command is much faster than &amp;lsquo;dd&amp;rsquo;. As soon as I tried it, I found it to be true.</description></item><item><title>An incident with a server and some thoughts on architecture</title><link>https://xinbadev.github.io/posts/architecture/</link><pubDate>Sun, 23 Feb 2020 21:30:11 +1100</pubDate><guid>https://xinbadev.github.io/posts/architecture/</guid><description>On the morning of February 20th, 2020, at 8:40am, I received a notification that the website was inaccessible. I quickly logged in and found that the frontend server of the main site was having issues. I urgently connected remotely to the AWS cloud server and found that the server was still running, ruling out the possibility of the EC2 server crashing. I then checked the Node server and found that PM2 was still running, but the application had crashed. I suspected that the hard drive was full. Upon checking the hard drive, it was indeed full. I immediately added space through the AWS console and restarted the server. After restarting the server and related applications, the server was back to normal at 8:49am.</description></item><item><title>OWASP TOP 10(2017)</title><link>https://xinbadev.github.io/posts/owasp/</link><pubDate>Sat, 21 Sep 2019 17:21:11 +1100</pubDate><guid>https://xinbadev.github.io/posts/owasp/</guid><description>&amp;lt;OWASP Top 10 - 2017 The Ten Most Critical Web Application Security Risks&amp;gt; summarizes the ten most likely, common, and dangerous vulnerabilities in web applications. Although it has been two years since the report was released, it is still very meaningful for introducing web security. Especially for engineers who are new to web security, this report is a very good guide that can help IT companies and development teams standardize the application development process and testing process, and improve the security of web products. This article will classify and analyze these vulnerability types and provide some of my personal opinions.</description></item><item><title>How to build a website full of vulnerabilities</title><link>https://xinbadev.github.io/posts/exploit/</link><pubDate>Thu, 19 Sep 2019 19:39:11 +1100</pubDate><guid>https://xinbadev.github.io/posts/exploit/</guid><description>Recently, while studying OWASP TOP10, I came across a open-source web app called juiceshop, which contains various types of vulnerabilities. After taking a closer look, I found out that this small web app has 88 vulnerabilities ranging from A1 to A9.</description></item><item><title>Linux Kernel Implementation of a System Call</title><link>https://xinbadev.github.io/posts/systemcall/</link><pubDate>Fri, 23 Aug 2019 19:39:11 +1100</pubDate><guid>https://xinbadev.github.io/posts/systemcall/</guid><description>The previous article analyzed the system calls required for a simple C program to run. This article mainly analyzes what happens when the setdomainname system call is made.</description></item><item><title>Analysis, Exploitation and Fix of Quickjs UAF Vulnerability</title><link>https://xinbadev.github.io/posts/quickjs/</link><pubDate>Thu, 01 Aug 2019 21:47:00 +1100</pubDate><guid>https://xinbadev.github.io/posts/quickjs/</guid><description>Quickjs is a lightweight JavaScript engine. Let&amp;rsquo;s start with a benchmark. As a lightweight JavaScript engine, Quickjs is excellent, even comparable to heavy engines like Hermes in terms of performance. Although there is still a considerable gap compared to V8 javascript engine, Quickjs was developed by only one person and is only 620kb in size compared to V8.</description></item><item><title>An Initial Exploration of DoS (Denial of Service) Attacks</title><link>https://xinbadev.github.io/posts/dos/</link><pubDate>Sun, 07 Jul 2019 18:33:00 +1100</pubDate><guid>https://xinbadev.github.io/posts/dos/</guid><description>Recently, while browsing Weibo, I came across an interesting article titled &amp;ldquo;My Experience with DDoS Extortion.&amp;rdquo; Like reading a story, I read it in one go. As a backend programmer, I have long heard about DoS attacks and have been interested in the techniques and principles of attack and defense in this area. This article reminded me of a series of articles I had previously read on DoS, such as &amp;ldquo;DDoS Attack Prevention Tutorial&amp;rdquo;, &amp;ldquo;DD4BC - A Hacker Group Specializing in DDoS Extortion for Bitcoin&amp;rdquo;, &amp;ldquo;Analysis and Reproduction of Linux Kernel SCTP Protocol Vulnerabilities (CVE-2019-8956)&amp;rdquo; and &amp;ldquo;GitHub Suffers Memcached-Based DDoS Attack with a Scale of 1.35 Tbps&amp;rdquo; This time, I plan to explore DoS (including DDoS) systematically on my own, and this article is a record of my exploration.</description></item></channel></rss>